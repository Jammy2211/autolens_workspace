"""INTRODUCTION"""

These scripts describe how to set up PyAutoLens on a high performance computer (HPC). The scripts are written for
the COSMA super computer we use at Durham, which uses the SLURM batch proceessing system. For your own HPC resources
this guide may there not provide a perfect tutorial for setting up PyAutoLens, however the majority of tasks required
for setting up PyAutoLens on HPC are general, so it should help out either way!

"""PYAUTOLENS VIRTUAL Environment"""

Before using the Cosma pipeline runner, we need to setup a workspace on Cosma on your home directory
('/cosma/home/durham/cosma_username'). Your home directory has a limited amount of hard-disk space, so it
is key that the parts of your laptop's workspace which store large amounts of data (e.g. the data and output folders)
are omitted from this workspace and stored somewhere else on Cosma.

To setup your cosma PyAutoLens workspace, the following commands should work from a terminal:

1) ssh -X cosma_username@login.cosma.dur.ac.uk

   This command ssh's you into cosma, and should be something you're familiar with. It'll log you into your home
   directory ('/cosma/home/durham/cosma_username').

2) python3 -m venv PyAutoLens

   This makes the a 'PyAutoLens' virtual environment and directory on your cosma home, where we'll install PyAutoLens and
   place your workspace. You MUST name your workspace PyAutoLens to use this setup file without changing any commands.

3) mkdir autolens_workspace
   cd autolens_workspace

   This creates and takes us into an autolens_workspace directory on COSMA.

4) emacs -nw activate.sh

   This opens an 'activate.sh' script, which we'll use every time we log into cosma to activate the virtual environment.

5) Copy and paste the following commands into the activate.sh script, which should be open in EMACS. Make sure to
   change the "cosma_username" entries to your cosma username!

   module purge
   module load cosma/2018
   module load python/3.6.5
   module load multinest/oct2018
   source /cosma/home/dp004/dc-nigh1/PyAutoLens/bin/activate
   export PYTHONPATH=/cosma/home/dp004/dc-nigh1/
   export WORKSPACE=/cosma/home/dp004/dc-nigh1/autolens_workspace/
   export SYMDIR="/cosma7/data/dp004/cosma_username/autolens/.autolens"

   To paste into an emacs window, use the command "CTRL + SHIFT + V"
   To exit and save, use the command "CTRL + SHIFT + X" -> "CTRL + SHIFT + C" and push 'y' for yes.

6) source activate.sh

   This activates your PyAutoLens environment. '(PyAutoLens)' should appear at the bottom left of you command line,
   next to where you type commands.

7) Install autolens, as per usual, using the command

   pip install autolens

Whenever you log into Cosma, you will need to 'activate' your PyAutoLens environment by running command 6) above. If you
want, you can make it so Cosma does this automatically whenever you log in. To make this your default setup (e.g. if
you're only going to be using PyAutoLens on Cosma) you can add the activate line to your .bashrc file:

    emacs -nw $HOME/.bashrc

then copy and paste (CTRL + SHIFT + V):

    source $HOME/autolens_workspace/activate.sh

And save and exit ("CTRL + SHIFT + X" -> "CTRL + SHIFT + C" and push 'y' for yes).



"""PYAUTOLENS WORKSPACE"""

Now we've set up our PyAutoLens virtual environment, we want to setup our workspace on Cosma, which will behave similar
to the workspace you're used to using on your laptop. First, make sure you are in the autolens_workspace directory.

    cd $HOME/autolens_workspacee

We are going to need to send files from your laptop to Cosma, and visa versa. On Cosma, the data and output files of
PyAutolens are stored in a separate directory to the workspace (we'll cover that below). Therefore, all we need to do
is transfer your config files, pipelines and runners to a workspace folder on Cosma.

Thus, we need some neat tools that allow us to upload these folders our laptop to this directory on Cosma and
conversely download the results of a PyAutoLens analysis on Cosma to our workspace. The command 'rsync' has us covered,
and we'll use 3 custom options of rsync:

 1) --update, which only sends data which has been updated on your laptop / Cosma. This ensures we don't resend our
 entire data-set or set of results every time we perform a file transfer. Phew!

 2) -v, this stands for verbose, and gives text output of the file transfer's progress.

 3) -r, we'll send folders full of data rather than individual files, and this r allows us to send entire folders.

Before running rsync, you should navigate your command line to your laptop's Py`autolens_workspace`.

    cd /path/to/autolens_workspace

These tutorials will assume you are running pipelines in PyAutoLens. However, example scripts and runners can easily be
uploaded instead by simply changing the commands below.

To upload pipelines from your laptop to Cosma

    rsync --update -v -r pipelines cosma_username@login.cosma.dur.ac.uk:/cosma/home/durham/cosma_username/autolens_workspace

Next, you should create a 'cosma' directory in your autolens_workspace on your laptop. To do this, you can start by
copy and pasting the folder from 'autolens_workspace/advanced/hpc/cosma to the main root of your workspace,
'autolens_workspace'. The cosma folder contains the following:

 - 'config': which is the same as the config's you've seen in the autolens_workspace. However, we want HPC runs to
   behave differently to our laptop runs, for example using a different matplotlib backend for visualization and
   zipping up the results to reduce file-storage usage. To faciliate this, the 'general.ini' config file has a 'hpc_mode'
   option, which for this config files is now set to True.

 - 'runners': these are the runners you'll run on COSMA. A script 'example.py' is here, which changes how a runner
   is set up compared to runners on your laptop. We'll cover this in more detail script below.

 - 'batch': the scripts we use to send a 'job' to cosma, which we will again cover in detail below.

We'll now send the cosma folder to your autolens workspace on cosma (note how by doing this, we are avoiding sending our
data to cosma).

    rsync --update -v -r cosma cosma_username@login.cosma.dur.ac.uk:/cosma/home/durham/cosma_username/autolens_workspace


"""PYAUTOLENS DATA AND OUTPUT FOLDERS"""

Now, we need to setup the directories that we'll store our data and PyAutoLens output on cosma. Our data and output
are stored in a different location to our workspace, because of the large amounts of data storage they require are kept
at a separate location on the supercomputer to your cosma home directory. Logged into cosma (e.g. via ssh), type the
following command to go to your data directory:

    COSMA5: cd /cosma5/data/cosma_username
    COSMA7: cd /cosma7/data/dp004/cosma_username

In the directory of you cosma_username, lets make the data and output folders we'll next transfer our data into.

    mkdir dataset
    mkdir output

On your laptop you should still be in your workspace, like you were when sending the pipelines and cosma folders.

The following rsync command can be used to send your data to Cosma (note that the example below uses the 'cosma5/data
cosma' directory, you shoul change this if necessary:

    rsync --update -v -r dataset/* cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/dataset/

And this command can send your output, if you have any results from your laptop you wish to continue from on cosma (you
can omit this if you want you cosma runs to begin from scratch). Again, note the 'cosma5/data' directory may need
changing:

    rsync --update -v -r output/* cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/output/

If we wanted to just send one dataset or output folder, (e.g., named 'example'), we would remove the * wildcards and write:

    rsync --update -v -r dataset/example cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/dataset/
    rsync --update -v -r output/example cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/output/

The following rsync commands can be used to download your dataset and output from Cosma:

    rsync --update -v -r cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/dataset/* ./dataset/
    rsync --update -v -r cosma_username@login.cosma.dur.ac.uk:/cosma5/data/autolens/cosma_username/output/* ./output/



Now you're setup, we're ready to run our first PyAutoLens analysis on Cosma. go to the
'autolens_workspace/cosma/example.py' script to learn about how we submit PyAutoLens jobs to Cosma.